#include "robot-config.h"
          
int main() {

    int carSpeedPCTfb= Controller1.Axis2.position(percentUnits::pct);
    int carSpeedPCTlr= Controller1.Axis4.position(percentUnits::pct);
    
   Controller.Screen.print (Brain.Battery.temperature();Brain.Battery.capacity());
    while(Brain pressing) {         
    Brain.Screen.clearScreen();    
    Brain.Screen.print(Brain.Battery.temperature();Brain.Battery.capacity());}
    }
    while(Brain.Battery.capacity()<20)
    {
    brain screen.print("low battery");
     controller1.screen.print("low battery");
     }
    
    if (Controller.ButtonUp.pressing())
    { 
    RMotor.spin(directionType::fwd,carSpeedPCTfb,velocityUnits::pct);
    LMotor.spin(directionType::fwd,carSpeedPCTfb,velocityUnits::pct);
    }
    
   if (Controller.ButtonUp.pressing())
   {
    RMotor.spin(directionType::rev,carSpeedPCTfb,velocityUnits::pct);
    LMotor.spin(directionType::rev,carSpeedPCTfb,velocityUnits::pct);
   }
    if (Controller.ButtonLeft.pressing())
    {
    RMotor.spin(directionType::fwd,carSpeedPCTlr,velocityUnits::pct);
    LMotor.spin(directionType::rev,carSpeedPCTlr,velocityUnits::pct);
    } 
    if（ Controller.ButtonRight.pressing()）
    
   { RMotor.spin(directionType::rev,carSpeedPCTlr,velocityUnits::pct);
     LMotor.spin(directionType::fwd,carSpeedPCTlr,velocityUnits::pct);
   }
    if（ Controller.Buttonleft.pressing()）
    
   { RMotor.spin(directionType::FWD,carSpeedPCTlr,velocityUnits::pct);
     LMotor.spin(directionType::REV,carSpeedPCTlr,velocityUnits::pct);
   }
   else
   { LMotor.stop();
     RMotor.stop();}
 vex::task::sleep(20)
    
}
